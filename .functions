#!/usr/bin/env bash


GITHUB_USER="rubenclemente"


function start() {
    nohup $1 &> /dev/null & disown;
}

# Create a new directory and enter it
function mkd() {
    mkdir -p "$@" && cd "$_";
}

# Determine size of a file or total size of a directory
function fs() {
    if du -b /dev/null > /dev/null 2>&1; then
        local arg=-sbh;
    else
        local arg=-sh;
    fi
    if [[ -n "$@" ]]; then
        du $arg -- "$@";
    else
        du $arg .[^.]* ./*;
    fi;
}

# `tre` is a shorthand for `tree` with hidden files and color enabled, ignoring
# the `.git` directory, listing directories first. The output gets piped into
# `less` with options to preserve color and line numbers, unless the output is
# small enough for one screen.
function tre() {
    tree -aC -I '.git|node_modules|bower_components' --dirsfirst "$@" | less -FRNX;
}

#
# GIT functions
#
function git-set-config() {
    git config --list

    echo "Enter Git fullname:"
    read USER_NAME
    echo "Requesting root permissions to set git config at system level..."
    sudo git config --system user.name $USER_NAME

    echo "Enter Git email address:"
    read USER_EMAIL
    echo "Requesting root permissions to set git config at system level..."
    sudo git config --system user.email $USER_EMAIL

    git config --list
}

function git-init-repo() {
    if [[ -z "$1" ]]; then
        echo "Repository name is empty."
        return;
    fi;

    echo "Repository name is [$1] - Press Enter to continue..."
    read

    echo "git init -b main"
    git init -b main

    echo "git add ."
    git add .

    echo "git commit -m \"First commit\""
    git commit -m "First commit"

    echo "git remote add origin git@github.com:$GITHUB_USER/$1.git"
    git remote add origin git@github.com:$GITHUB_USER/$1.git

    echo "git remote -v"
    git remote -v

    echo "git push -u origin main"
    git push -u origin main

    echo "Success."
}
